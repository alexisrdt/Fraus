cmake_minimum_required(VERSION 3.0)

project(Fraus C)

# Set C standard to C17
set(CMAKE_C_STANDARD 17)
set(CMAKE_C_EXTENSIONS OFF)

# Set compiler flags
if(MSVC)
	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /W4 /WX")
else()
	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -Wextra -pedantic -Werror -pedantic-errors -pthread -lm")
endif()

# Build Fraus
add_library(fraus STATIC
	fraus/src/images/images.c fraus/src/images/inflate.c
	fraus/src/models/map.c fraus/src/models/models.c
	fraus/src/vulkan/object.c fraus/src/vulkan/utils.c fraus/src/vulkan/vulkan.c
	fraus/src/camera.c fraus/src/fraus.c fraus/src/math.c fraus/src/threads.c fraus/src/window.c
)

# Build demo
option(FRAUS_BUILD_DEMO "Build the demo" OFF)
if(FRAUS_BUILD_DEMO)
	# Compile the shaders
	set(FRAUS_GLSLANGVALIDATOR_DIRECTORY "" CACHE FILEPATH "Path to the glslangValidator executable")
	if(MSVC)
		set(FRAUS_EXECUTABLE_EXTENSION ".exe")
	endif()
	add_custom_command(
		OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/vert.spv
		COMMAND ${FRAUS_GLSLANGVALIDATOR_DIRECTORY}glslangValidator${FRAUS_EXECUTABLE_EXTENSION} -V ${CMAKE_CURRENT_SOURCE_DIR}/demo/shader.vert -o ${CMAKE_CURRENT_BINARY_DIR}/vert.spv
		DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/demo/shader.vert
	)
	add_custom_command(
		OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/frag.spv
		COMMAND ${FRAUS_GLSLANGVALIDATOR_DIRECTORY}glslangValidator${FRAUS_EXECUTABLE_EXTENSION} -V ${CMAKE_CURRENT_SOURCE_DIR}/demo/shader.frag -o ${CMAKE_CURRENT_BINARY_DIR}/frag.spv
		DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/demo/shader.frag
	)
	add_custom_command(
		OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/other.spv
		COMMAND ${FRAUS_GLSLANGVALIDATOR_DIRECTORY}glslangValidator${FRAUS_EXECUTABLE_EXTENSION} -V ${CMAKE_CURRENT_SOURCE_DIR}/demo/other.frag -o ${CMAKE_CURRENT_BINARY_DIR}/other.spv
		DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/demo/other.frag
	)
	add_custom_target(Shaders DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/vert.spv ${CMAKE_CURRENT_BINARY_DIR}/frag.spv ${CMAKE_CURRENT_BINARY_DIR}/other.spv)

	# Copy the "vk_layer_settings.txt" file from "demo" to the build folder generated by CMake
	add_custom_command(
		OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/vk_layer_settings.txt
		COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_SOURCE_DIR}/demo/vk_layer_settings.txt ${CMAKE_CURRENT_BINARY_DIR}/vk_layer_settings.txt
		DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/demo/vk_layer_settings.txt
	)
	add_custom_target(LayerSettings DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/vk_layer_settings.txt)

	# Compile demo
	add_executable(FrausDemo demo/main.c)
	add_dependencies(FrausDemo Shaders LayerSettings)

	# Set include directory
	set(FRAUS_VULKAN_INCLUDE_DIRECTORY "" CACHE PATH "Path to the Vulkan include directory")
	target_include_directories(FrausDemo PRIVATE fraus/include FRAUS_VULKAN_INCLUDE_DIRECTORY)

	# Link Fraus
	target_link_libraries(FrausDemo PRIVATE fraus)

	# Specific libraries on Linux
	if(UNIX)
		target_link_libraries(FrausDemo PRIVATE m X11)
	endif()

endif()
